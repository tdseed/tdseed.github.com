---
layout: post
title:  "七牛试用－基本概念，原理和实践"
date:   2015-01-13 12:27:25
categories: technology
---

在进入实践环节之前，了解如下这些信息和基础概念将有助于正确地使用七牛云存储服务。

## 开发者账号

每个标准用户型的开发者账号拥有以下资源：

* 最多绑定一个手机号码，在执行危险操作前，发送验证码短信或语音通知；
* 最多两对密钥，用于防伪签名与颁发授权凭证；
* 最多可以创建20个存储空间

## 存储空间（Bucket）

存储空间是组织管理各种已上传资源的最小逻辑单位，单个空间可以容纳的资源数量没有上限。

对于存储空间有以下限制：

* 空间名字只能包含“A-Z”、“a-z”、“0-9”以及“-”（连字符），最长不超过64个字符；
* 不能建立文件夹，可以通过在资源名中包含“/”来模拟层级结构，见下文。
可以为每个空间设置一系列的属性值，便于对空间的管理、访问行为进行细微调整。其中最重要的一个属性是资源可见性：

* 不做特殊设置时，公开空间的资源可被任何人在任何时间访问；
* 私有空间的资源只对得到授权的访问者开放，并在限定时段内访问。
其它可用属性将在后续文章中介绍。

另外，每个空间还将自动绑定一个形如“.qiniudn.com”形式的三级域名，并自动关联到优质CDN，提供加速分发功能。

## 资源与资源名（Key）

上传到存储空间里保存的文件也称为资源，并具有该空间内唯一的资源名（Key）。切勿将资源名的Key与前述密钥的Key相混淆。

资源名有如下命名规则：

* 必须使用UTF-8编码；
* 可以为空字符串（空Key）；
* 可以包含“/”，以模拟包含文件夹的路径；
* 最长不超过720个字符（即UTF-8编码长度）。
注意：不要使用“?”、“#”这两个字符来命名资源，否则会导致访问URL不能被正确解析。

## 接口形式

七牛云选择HTTP协议作为基准接口形式，以便实现跨越互联网的远程调用，减少防火墙、中间路由器带来的意外影响。在此基准之上，根据不同的功能实现，会选择不同的数据组织格式。本篇及后续文章均假定读者已经熟悉HTTP协议。

通常，对于一个HTTP请求报文，有如下三个点需要注意：

1. URI与QueryString部分，用于指定功能名称与相关参数；
2. Header部分，用于指定必要的非功能参数；
3. Body部分，用于组织上传数据或其它信息。
相应的，对于一个HTTP响应报文，也有如下三个点需要注意：

1. 响应状态码，指明服务器的执行结果状态；
2. Header部分，包含有影响缓存、资源元信息等必要的设定值；
3. Body部分，对于查询类请求将返回以JSON格式组织的状态和信息数据，对于下载类请求将返回实际数据。

## /upload接口

本接口实现直观的单文件直传功能。为达到最大程度的普适性，使用multipart/from-data格式组织上传数据。

一个上传请求报文至少需要包含如下两项信息：

* 上传授权凭证（UploadToken）；
* 文件内容（FileContent）与原始文件名（FileName）。
下面是可用的、最小且完整的上传请求报文模板：

`
POST / HTTP/1.1
Host: up.qiniu.com
Content-Type: multipart/form-data; boundary=<Boundary>
Content-Length: <MultipartContentLength>

--<Boundary>
Content-Disposition: form-data; name="token"

<UploadToken>
--<Boundary>
Content-Disposition: form-data; name="file"; filename="<FileName>"

<FileContent>
--<Boundary>--
`

## 上传授权凭证

本质上，上传并不需要授权，无非是把一团数据发送给服务器。但对于用户而言，任何知晓上传原理的第三方都可能滥用该功能，向服务器提交垃圾数据，或是伪造/篡改数据，侵占存储空间，导致业务风险。因此七牛云使用上传授权凭证（称为UploadToken）来控制谁在什么时刻之前向哪个存储空间上传文件，避免业务风险。

一个有效的上传授权凭证由三部分组成：
`
<AccessKey>:<EncodedSign>:<EncodedPutPolicy>
`

其中，

1. <AccessKey>用于指明谁在发起上传（即开发者账号）；
2. <EncodedSign>是UrlSafe-Base64编码的上传策略的加密签名，防止信息被伪造或篡改。签名算法将在实践中解释；
3. <EncodedPutPolicy>是经过UrlSafe-Base64编码的上传策略信息，用于指明上传截止时刻与目标存储空间。

## 上传策略

上传策略是以JSON格式组织的数据对象，用于指定上传请求的各项参数。一个最小的完整示例如下：
`
{
        "scope":    "qiniu-ts-demo",
        "deadline": 1388506200
}
`

其中，

* scope字段指明目标存储空间的名字；
* deadline字段指明上传授权有效期的截止时间，是一个UNIX时间戳，单位为秒，示例值对应的时刻为"2014-01-01 00:10:00"（在Linux上可以执行 date -d"2014-01-01 00:00:00 10 minutes" +"%s" 得到该值）。
还可以在上传策略中指定某些可以影响上传行为的微调参数，后续文章会进行细节解释，此处不再展开。
